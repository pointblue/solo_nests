ka_outcome_br <-
ka_outcome %>%
filter(result != "UNK") %>%
# transform character outcome to numeric factor
mutate(binaryKA = if_else(
result == 'FAIL',
0,
1)) %>%
# select relevant columns
dplyr::select(
c(nestid = nest,
binaryKA,
result,
result_dt,
chick1size,
chick2size)) %>%
# calculate number of chx creched
mutate(kaChx = case_when(
result == 'CR1?' ~ 1,
result == 'CR8?' ~ 1,
result == 'CR2?' ~ 2,
result == 'FAIL' ~ 0))
# get most common nest location
ka_locs <-
initial_ka_obs %>%
group_by(bandnumb) %>%
summarise(latitude = min(lat), longitude = max(lon), .groups = 'drop') %>%
dplyr::rename(nestid = bandnumb)
# join the data
ka_rs <-
left_join(ka_outcome_br, ka_locs, by = c("nestid")) %>%
mutate(type = 'ka', typeNum = 3)
ka_rs
# add size for both chicks from 2 ch nests
ka_rs %>%
filter(kaChx == 2) %>%
pivot_longer(
cols = c(chick1size, chick2size),
names_to = 'chick',
values_to = 'size')
# add size for both chicks from 2 ch nests
ka_rs %>%
filter(kaChx == 2) %>% View()
ka_rs %>%
filter(kaChx == 2)
# add size for both chicks from 2 ch nests
ka_rs %>%
filter(kaChx == 2) %>%
pivot_longer(
cols = c(chick1size, chick2size),
names_to = 'chick',
values_to = 'size') %>% View()
# add size for both chicks from 2 ch nests
ka_rs %>%
filter(kaChx == 2) %>%
pivot_longer(
cols = c(chick1size, chick2size),
names_to = 'chick',
values_to = 'size') %>%
mutate(chick = if_else(
chick == 'chick1size',
1,
2))
ka_rs %>%
transmute(nestid = as.character(bandnumb),
size = chick1size,
season,
type)
ka_rs %>%
transmute(nestid = as.character(nestid),
size = chick1size,
season,
type)
ka_rs %>%
transmute(nestid = as.character(nestid),
size = chick1size,
season = 2122,
type)
ka_rs %>%
transmute(nestid = as.character(nestid),
size = chick1size,
chick = 1,
season = 2122,
type)
ka_rs %>%
filter(binaryKA == 1) %>%
transmute(nestid = as.character(nestid),
size = chick1size,
chick = 1,
season = 2122,
type)
# join the data
ka_rs <-
left_join(ka_outcome_br, ka_locs, by = c("nestid")) %>%
mutate(type = 'ka',
typeNum = 3,
chick1size = factor(chick1size,
levels = c('OR1',
'OR2',
'GF1',
'GF2',
'MEL1',
'MEL2',
'PA',
'PA+'),
ordered = T)
)
# join the data
ka_rs <-
left_join(ka_outcome_br, ka_locs, by = c("nestid")) %>%
mutate(type = 'ka',
typeNum = 3,
chick1size = factor(chick1size,
levels = c('OR1',
'OR2',
'GF1',
'GF2',
'MEL1',
'MEL2',
'PA',
'PA+'),
ordered = T)
chick2size = chick1size = factor(chick1size,
# join the data
ka_rs <-
left_join(ka_outcome_br, ka_locs, by = c("nestid")) %>%
mutate(type = 'ka',
typeNum = 3,
chick1size = factor(chick1size,
levels = c('OR1',
'OR2',
'GF1',
'GF2',
'MEL1',
'MEL2',
'PA',
'PA+'),
ordered = T)
chick2size = chick2size = factor(chick1size,
# join the data
ka_rs <-
left_join(ka_outcome_br, ka_locs, by = c("nestid")) %>%
mutate(type = 'ka',
typeNum = 3,
chick1size = factor(chick1size,
levels = c('OR1',
'OR2',
'GF1',
'GF2',
'MEL1',
'MEL2',
'PA',
'PA+'),
ordered = T),
chick2size = chick2size = factor(chick1size,
# join the data
ka_rs <-
left_join(ka_outcome_br, ka_locs, by = c("nestid")) %>%
mutate(type = 'ka',
typeNum = 3,
chick1size = factor(chick1size,
levels = c('OR1',
'OR2',
'GF1',
'GF2',
'MEL1',
'MEL2',
'PA',
'PA+'),
ordered = T),
chick2size = factor(chick2size,
levels = c('OR1',
'OR2',
'GF1',
'GF2',
'MEL1',
'MEL2',
'PA',
'PA+'),
ordered = T))
ka_rs %>% filter(chick1size < chick2size)
# add size for both chicks from 2 ch nests
ka_rs %>%
filter(kaChx == 2) %>%
pivot_longer(
cols = c(chick1size, chick2size),
names_to = 'chick',
values_to = 'size') %>%
mutate(chick = if_else(
chick == 'chick1size',
1,
2),
season = 2122)
ka_rs %>%
filter(kaChx == 1) %>%
transmute(nestid = as.character(nestid),
size = chick1size,
chick = 1,
season = 2122,
type)
# add size for both chicks from 2 ch nests
ka_rs %>%
filter(kaChx == 2) %>%
pivot_longer(
cols = c(chick1size, chick2size),
names_to = 'chick',
values_to = 'size') %>%
mutate(chick = if_else(
chick == 'chick1size',
1,
2),
season = 2122) %>%
dplyr::select(nestid, size, chick, season, type)
ka_rs %>%
filter(kaChx == 1) %>%
transmute(nestid = as.character(nestid),
size = chick1size,
chick = 1,
season = 2122,
type)
solo_size_cr
ka_rs
View(solo_size_cr)
# CHICK SIZE
ka_rs %>%
# will add 2ch nests later since require ch2 size also
filter(kaChx == 1) %>%
transmute(nestid = as.character(nestid),
size = chick1size,
chick = 1,
season = 2122,
type) %>%
# add in chicks from 2 ch nests
rbind(
# add size for both chicks from 2 ch nests
ka_rs %>%
filter(kaChx == 2) %>%
pivot_longer(
cols = c(chick1size, chick2size),
names_to = 'chick',
values_to = 'size') %>%
mutate(chick = if_else(
chick == 'chick1size',
1,
2),
season = 2122) %>%
dplyr::select(nestid, size, chick, season, type)) %>%
# add solo nest chick sizes
rbind(solo_size_cr %>%
mutate(type = 'solo',
size = factor(size,
levels = c('OR1',
'OR2',
'GF1',
'GF2',
'MEL1',
'MEL2',
'PA',
'PA+'),
ordered = T))) %>% # pull(size) %>% unique()
mutate(season = factor(season)) %>%
ggplot() +
geom_bar(aes(x = size, fill = type), position = 'dodge') +
facet_grid(type~.)
solo_size_cr %>%
mutate(type = 'solo',
size = factor(size,
levels = c('OR1',
'OR2',
'GF1',
'GF2',
'MEL1',
'MEL2',
'PA',
'PA+'),
ordered = T))
test <- tibble(a = c(1,2), b = c(3,4))
test %>% mutate(row = seq(1:nrow(test)))
solo_size_cr %>%
mutate(type = 'solo',
row = seq(1:nrow(solo_size_cr)),
chick = if_else(
row == 12,
2,
1),
size = factor(size,
levels = c('OR1',
'OR2',
'GF1',
'GF2',
'MEL1',
'MEL2',
'PA',
'PA+'),
ordered = T)) %>%
select(-c(row))
# CHICK SIZE
ka_rs %>%
# will add 2ch nests later since require ch2 size also
filter(kaChx == 1) %>%
transmute(nestid = as.character(nestid),
size = chick1size,
chick = 1,
season = 2122,
type) %>%
# add in chicks from 2 ch nests
rbind(
# add size for both chicks from 2 ch nests
ka_rs %>%
filter(kaChx == 2) %>%
pivot_longer(
cols = c(chick1size, chick2size),
names_to = 'chick',
values_to = 'size') %>%
mutate(chick = if_else(
chick == 'chick1size',
1,
2),
season = 2122) %>%
dplyr::select(nestid, chick, size, season, type)) %>%
# add solo nest chick sizes
rbind(solo_size_cr %>%
mutate(type = 'solo',
row = seq(1:nrow(solo_size_cr)),
chick = if_else(
row == 12,
2,
1),
size = factor(size,
levels = c('OR1',
'OR2',
'GF1',
'GF2',
'MEL1',
'MEL2',
'PA',
'PA+'),
ordered = T)) %>%
select(-c(row))) %>% # pull(size) %>% unique()
mutate(season = factor(season)) %>%
ggplot() +
geom_bar(aes(x = size, fill = type), position = 'dodge') +
facet_grid(type~.)
solo_comp
solo_comp <-
as_tibble(solo_rs) %>%
select(bandnumb = `...1`,
nuChx = chN,
crChx = confirmCR) %>%
mutate(season = 2122) %>%
inner_join(ground_count_avg, by = 'season') %>%
mutate(bandnumb = as.double(bandnumb),
nuChx = as.double(nuChx),
crChx = as.double(crChx),
anomaly = crChx - avgSuccess,
type = 'solo') %>%
rbind(fishtagComp %>%
select(-c('nuEgg'))) %>%
mutate(type = factor(type),
typeNum = as.numeric(type))
solo_comp
solo_comp_crct <-
solo_comp %>%
dplyr::select(c(nestid = bandnumb, season, type, typeNum, nuChx, crChx, anomaly, type)) %>%
mutate(crctChx = anomaly + ground_count_avg$avgSuccess[ground_count_avg$season == 2122])
solo_comp_crct
as_tibble(solo_rs)
View(ka_rs)
ka_rs
as_tibble(solo_rs) %>%
select(nestid = `...1`,
kaChx = outcomeKA) %>%
mutate(season = 2122,
type = 'solo')
ka_rs
solo_ka <-
as_tibble(solo_rs) %>%
select(nestid = `...1`,
kaChx = outcomeKA) %>%
mutate(season = 2122,
type = 'solo') %>%
rbind(ka_rs %>%
dplyr:;select(nestid, kaChx, season, type))
# create an object with knownage outcomes for solo nests and known-age nests in 2122
solo_ka <-
as_tibble(solo_rs) %>%
select(nestid = `...1`,
kaChx = outcomeKA) %>%
mutate(season = 2122,
type = 'solo') %>%
rbind(ka_rs %>%
dplyr::select(nestid, kaChx, season, type))
# create an object with knownage outcomes for solo nests and known-age nests in 2122
solo_ka <-
as_tibble(solo_rs) %>%
select(nestid = `...1`,
kaChx = outcomeKA) %>%
mutate(type = 'solo') %>%
rbind(ka_rs %>%
dplyr::select(nestid, kaChx, type))
ka_rs
ka_rs %>%
dplyr::select(nestid, kaChx, type)
as_tibble(solo_rs) %>%
select(nestid = `...1`,
kaChx = outcomeKA)
as_tibble(solo_rs) %>%
select(nestid = `...1`,
kaChx = outcomeKA) %>% str()
as_tibble(solo_rs) %>%
select(nestid = `...1`,
kaChx = as.numeric(outcomeKA)) %>%
mutate(type = 'solo') %>%
rbind(ka_rs %>%
dplyr::select(nestid, kaChx, type))
as_tibble(solo_rs)
as_tibble(solo_rs) %>%
select(nestid = `...1`,
kaChx = as.numeric(outcomeKA))
as_tibble(solo_rs) %>%
transmute(nestid = `...1`,
kaChx = as.numeric(outcomeKA))
as_tibble(solo_rs) %>%
transmute(nestid = `...1`,
kaChx = as.numeric(outcomeKA)) %>%
mutate(type = 'solo') %>%
rbind(ka_rs %>%
dplyr::select(nestid, kaChx, type))
# create an object with knownage outcomes for solo nests and known-age nests in 2122
solo_ka <-
as_tibble(solo_rs) %>%
transmute(nestid = `...1`,
kaChx = as.numeric(outcomeKA)) %>%
mutate(type = 'solo') %>%
rbind(ka_rs %>%
dplyr::select(nestid, kaChx, type))
as_tibble(solo_rs)
as_tibble(solo_rs) %>%
transmute(nestid = `...1`,
kaChx = as.character(outcomeKA))
as_tibble(solo_rs) %>%
transmute(nestid = `...1`,
kaChx = as.character(outcomeKA)) %>% str()
# create an object with knownage outcomes for solo nests and known-age nests in 2122
# solo_ka <-
as_tibble(solo_rs) %>%
transmute(nestid = `...1`,
kaChx = as.character(outcomeKA)) %>% pull(kaChx) %>% unique()
# create an object with knownage outcomes for solo nests and known-age nests in 2122
# solo_ka <-
as_tibble(solo_rs) %>%
mutate(nestid = `...1`,
kaChx = as.character(outcomeKA)) %>% dplyr::select(nestid, kaChx, outcomeKA)
# create an object with knownage outcomes for solo nests and known-age nests in 2122
# solo_ka <-
as_tibble(solo_rs) %>%
mutate(nestid = `...1`,
kaChx = as.character(outcomeKA)) %>% dplyr::select(nestid, kaChx, outcomeKA) %>% View()
# create an object with knownage outcomes for solo nests and known-age nests in 2122
solo_ka <-
as_tibble(solo_rs) %>%
transmute(nestid = `...1`,
kaChx = as.character(outcomeKA)) %>%
mutate(kaChx = as.numeric(kaChx),
type = 'solo') %>%
rbind(ka_rs %>%
dplyr::select(nestid, kaChx, type))
# create an object with knownage outcomes for solo nests and known-age nests in 2122
solo_ka <-
as_tibble(solo_rs) %>%
transmute(nestid = `...1`,
kaChx = as.character(outcomeKA)) %>%
mutate(kaChx = as.numeric(kaChx),
type = 'solo') %>%
rbind(ka_rs %>%
dplyr::select(nestid, kaChx, type)) %>%
mutate(typeNum = if_else(
type == 'solo',
2, # solo is 2
1 # ka is 1
))
solo_ka
# shapiro-wilk test of normality
with(solo_ka, shapiro.test(kaChx[typeNum == "2"])) # p < 0.05: solos not normal!
with(solo_ka, shapiro.test(kaChx[typeNum == "1"])) # p < 0.05: fishes not normal either!!
# F-test to compare variance between groups
var.test(kaChx ~ typeNum, data = solo_ka) # p = 0.65: no signif. difference in variance
# Wilcoxon two-sample, two-tailed t-test (unequal variance)
with(solo_ka, wilcox.test(kaChx ~ typeNum,
alternative = 'two.sided',
var.equal = TRUE))
solo_ka %>%
ggplot() +
geom_boxplot(x = kaChx, color = type)
solo_ka %>%
ggplot() +
geom_boxplot(aes(x = kaChx, color = type))
solo_ka %>%
group_by(type) %>%
summarise(
median = median(kaChx),
mean = mean(kaChx),
sd = sd(kaChx))
# shapiro-wilk test of normality
with(solo_ka, shapiro.test(kaChx[typeNum == "2"])) # p < 0.05: solos not normal!
with(solo_ka, shapiro.test(kaChx[typeNum == "1"])) # p < 0.05: known-age not normal either!!
solo_ka %>%
group_by(type) %>%
summarise(
median = median(kaChx),
mean = mean(kaChx),
sd = sd(kaChx))
